{"version":3,"file":"static/js/305.f9c82df7.chunk.js","mappings":"sMAkEA,UA5DqB,WAAO,IAAD,EACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAO3D,IALAC,EAAAA,EAAAA,YAAU,WACHX,IACLY,EAAAA,EAAAA,IAAaZ,GAASa,MAAK,SAAAC,GAAI,OAAIV,EAAgBU,EAApB,GAChC,GAAE,CAACd,KAECG,EACH,OAAO,4CAGT,IAAQY,EACNZ,EADMY,MAAOC,EACbb,EADaa,aAAcC,EAC3Bd,EAD2Bc,YAAaC,EACxCf,EADwCe,SAAUC,EAClDhB,EADkDgB,OAE9CC,GAA8B,GADlCjB,EAD0DkB,cAEpBC,QAAQ,GAEhD,OACE,iCACE,4BACE,SAAC,KAAD,CAAMC,GAAIhB,EAAoBiB,QAA9B,UACE,mBAAQC,KAAK,SAAb,wBAEF,gBACEC,IACET,EACI,kCAAoCA,EACpC,sCAENU,IAAKZ,KAEP,0BACGA,EADH,IACWC,EAAaY,UAAU,EAAG,GADrC,QAGA,wCAAgBR,EAAhB,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIC,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAE3C,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,8LC9DKC,EAAU,mCACVC,EAAW,+BAEXC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAH1B,cAEZI,EAFY,yBAKXA,EAASC,KAAKC,SALH,gCAOlBC,QAAQC,IAAR,MAPkB,yDAAH,qDAWbC,EAAiB,mCAAG,WAAMC,GAAN,gGAECP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCU,EADhC,oBAFD,cAEhBN,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWjB/B,EAAY,mCAAG,WAAMkC,GAAN,gGAEMR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,oBACcX,EADd,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,MALC,gCAOjBE,QAAQC,IAAR,MAPiB,yDAAH,sDAWZI,EAAS,mCAAG,WAAMD,GAAN,gGAESR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BACsBX,EADtB,oBAFT,cAERI,EAFQ,yBAKPA,EAASC,KAAKQ,MALP,gCAOdN,QAAQC,IAAR,MAPc,yDAAH,sDAWTM,EAAY,mCAAG,WAAMH,GAAN,gGAEMR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BACsBX,EADtB,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,KAAKC,SALJ,gCAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qD","sources":["Pages/MovieDetails/MovieDetails.js","Service/Api.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { fetchDetails } from 'Service/Api.js';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchDetails(movieId).then(resp => setMovieDetails(resp));\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Please wait...</div>;\n  }\n\n  const { title, release_date, poster_path, overview, genres, vote_average } =\n    movieDetails;\n  const votePercent = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <div>\n        <Link to={backLinkLocationRef.current}>\n          <button type=\"button\">Go back</button>\n        </Link>\n        <img\n          src={\n            poster_path\n              ? 'https://image.tmdb.org/t/p/w300' + poster_path\n              : 'https://via.placeholder.com/200x200'\n          }\n          alt={title}\n        />\n        <h1>\n          {title}({release_date.substring(0, 4)})\n        </h1>\n        <p>User Score: {votePercent}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => genre.name).join(' ')}</p>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c4c5b8027f2691a5d68bddee68a8cb70';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchDetails","then","resp","title","release_date","poster_path","overview","genres","votePercent","vote_average","toFixed","to","current","type","src","alt","substring","map","genre","name","join","Suspense","fallback","API_KEY","BASE_URL","fetchTrending","axios","response","data","results","console","log","fetchSearchMovies","searchQuery","id","fetchCast","cast","fetchReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/785.fedb993d.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAH1B,cAEZI,EAFY,yBAKXA,EAASC,KAAKC,SALH,gCAOlBC,QAAQC,IAAR,MAPkB,yDAAH,qDAWbC,EAAiB,mCAAG,WAAMC,GAAN,gGAECP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCU,EADhC,oBAFD,cAEhBN,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWjBG,EAAY,mCAAG,WAAMC,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,oBACcZ,EADd,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,MALC,gCAOjBE,QAAQC,IAAR,MAPiB,yDAAH,sDAWZK,EAAS,mCAAG,WAAMD,GAAN,gGAEST,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BACsBZ,EADtB,oBAFT,cAERI,EAFQ,yBAKPA,EAASC,KAAKS,MALP,gCAOdP,QAAQC,IAAR,MAPc,yDAAH,sDAWTO,EAAY,mCAAG,WAAMH,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BACsBZ,EADtB,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,KAAKC,SALJ,gCAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qD,8ECvBlB,UAtBgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAaI,GAASG,MAAK,SAAAC,GAAI,OAAIL,EAAWK,EAAf,GAChC,GAAE,CAACJ,IAECF,GAGH,wBACGA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASd,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKa,KACL,uBAAIC,MAFGd,EADE,OAJI,yEAYtB,C","sources":["Service/Api.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c4c5b8027f2691a5d68bddee68a8cb70';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Service/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(resp => setReviews(resp));\n  }, [movieId]);\n\n  if (!reviews) return <p>Sorry, have no any reviews data for this movie</p>;\n\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h2>{author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","fetchTrending","axios","response","data","results","console","log","fetchSearchMovies","searchQuery","fetchDetails","id","fetchCast","cast","fetchReviews","useState","reviews","setReviews","movieId","useParams","useEffect","then","resp","map","author","content"],"sourceRoot":""}
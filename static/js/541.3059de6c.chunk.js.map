{"version":3,"file":"static/js/541.3059de6c.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAH1B,cAEZI,EAFY,yBAKXA,EAASC,KAAKC,SALH,gCAOlBC,QAAQC,IAAR,MAPkB,yDAAH,qDAWbC,EAAiB,mCAAG,WAAMC,GAAN,gGAECP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCU,EADhC,oBAFD,cAEhBN,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWjBG,EAAY,mCAAG,WAAMC,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,oBACcZ,EADd,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,MALC,gCAOjBE,QAAQC,IAAR,MAPiB,yDAAH,sDAWZK,EAAS,mCAAG,WAAMD,GAAN,gGAEST,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BACsBZ,EADtB,oBAFT,cAERI,EAFQ,yBAKPA,EAASC,KAAKS,MALP,gCAOdP,QAAQC,IAAR,MAPc,yDAAH,sDAWTO,EAAY,mCAAG,WAAMH,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BACsBZ,EADtB,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,KAAKC,SALJ,gCAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qD,8ECnBlB,UA1Ba,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,GAAUK,GAASG,MAAK,SAAAC,GAAI,OAAIL,EAAQK,EAAZ,GAC7B,GAAE,CAACJ,IAECJ,GAGH,wBACGA,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWd,EAAlC,EAAkCA,GAAlC,OACR,2BACE,gBACEe,IAAG,0CAAqCH,GACxCI,IAAKH,KAEP,wBAAKA,KACL,uBAAIC,MANGd,EADD,OAJI,sEAgBnB,C","sources":["Service/Api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c4c5b8027f2691a5d68bddee68a8cb70';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'Service/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId).then(resp => setCast(resp));\n  }, [movieId]);\n\n  if (!cast) return <p>Sorry, have no any cast data for this movie</p>;\n\n  return (\n    <ul>\n      {cast.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n            alt={name}\n          />\n          <h2>{name}</h2>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","fetchTrending","axios","response","data","results","console","log","fetchSearchMovies","searchQuery","fetchDetails","id","fetchCast","cast","fetchReviews","useState","setCast","movieId","useParams","useEffect","then","resp","map","profile_path","name","character","src","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/741.553ffc8e.chunk.js","mappings":"sMA0DA,UAtDe,WACb,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OATAC,EAAAA,EAAAA,YAAU,WACiB,KAArBN,EAAUO,QAKdC,EAAAA,EAAAA,IAAkBR,GAAWS,MAAK,SAAAC,GAAI,OAAIP,EAAgBO,EAApB,IAJpCP,EAAgB,GAKnB,GAAE,CAACH,KAGF,4BACE,kBAAMW,SAzBW,SAAAC,GACnBA,EAAEC,iBACuB,KAArBb,EAAUO,SAIdC,EAAAA,EAAAA,IAAkBR,GAAWS,MAAK,SAAAC,GAAI,OAAIP,EAAgBO,EAApB,IACtCT,EAAa,KAJXa,MAAM,6BAKT,EAiBG,WACE,kBACEC,KAAK,OACLC,YAAY,mBACZC,aAAa,MACbC,WAAS,EACTC,SArBa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBnB,EAAamB,EAAOC,MACrB,EAoBOA,MAAOrB,KAET,mBAAQe,KAAK,SAAb,uBAEDb,EAAaoB,KAAI,SAAAC,GAAK,OACrB,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAhD,SACGmB,EAAMK,WAHJL,EAAME,GADM,MAW5B,C,8LCtDKI,EAAU,mCACVC,EAAW,+BAEXC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAH1B,cAEZI,EAFY,yBAKXA,EAASC,KAAKC,SALH,gCAOlBC,QAAQC,IAAR,MAPkB,yDAAH,qDAWb7B,EAAiB,mCAAG,WAAM8B,GAAN,gGAECN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCS,EADhC,oBAFD,cAEhBL,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWjBE,EAAY,mCAAG,WAAMd,GAAN,gGAEMO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAL,EADA,oBACcI,EADd,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,MALC,gCAOjBE,QAAQC,IAAR,MAPiB,yDAAH,sDAWZG,EAAS,mCAAG,WAAMf,GAAN,gGAESO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAL,EADA,4BACsBI,EADtB,oBAFT,cAERI,EAFQ,yBAKPA,EAASC,KAAKO,MALP,gCAOdL,QAAQC,IAAR,MAPc,yDAAH,sDAWTK,EAAY,mCAAG,WAAMjB,GAAN,gGAEMO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAL,EADA,4BACsBI,EADtB,oBAFN,cAEXI,EAFW,yBAKVA,EAASC,KAAKC,SALJ,gCAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qD","sources":["Pages/Movies/Movies.js","Service/Api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from 'Service/Api';\n\nconst Movies = () => {\n  const [movieName, setMovieName] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      alert('Please enter a valid query');\n      return;\n    }\n    fetchSearchMovies(movieName).then(resp => setSearchResult(resp));\n    setMovieName('');\n  };\n\n  const handleChange = ({ target }) => {\n    setMovieName(target.value);\n  };\n\n  useEffect(() => {\n    if (movieName.trim() === '') {\n      setSearchResult([]);\n      return;\n    }\n\n    fetchSearchMovies(movieName).then(resp => setSearchResult(resp));\n  }, [movieName]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your query\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          value={movieName}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResult.map(movie => (\n        <ul key={movie.id}>\n          <li>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'c4c5b8027f2691a5d68bddee68a8cb70';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["useState","movieName","setMovieName","searchResult","setSearchResult","location","useLocation","useEffect","trim","fetchSearchMovies","then","resp","onSubmit","e","preventDefault","alert","type","placeholder","autoComplete","autoFocus","onChange","target","value","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchTrending","axios","response","data","results","console","log","searchQuery","fetchDetails","fetchCast","cast","fetchReviews"],"sourceRoot":""}